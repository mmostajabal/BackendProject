
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Mohammad
 */
public class DefineUser extends javax.swing.JFrame {

    /**
     * Creates new form DefineUser
     */
    public DefineUser() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        FirstNameTxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        LastNameTxt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        PasswordTxt = new javax.swing.JPasswordField();
        jLabel5 = new javax.swing.JLabel();
        EmailTxt = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        PhoneTxt = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        UserTypeList = new javax.swing.JComboBox<>();
        saveBtn = new javax.swing.JButton();
        UserTable = new javax.swing.JScrollPane();
        UserTbl = new javax.swing.JTable();
        UserId = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setAlwaysOnTop(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setText("First Name");

        FirstNameTxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                FirstNameTxtFocusLost(evt);
            }
        });

        jLabel2.setText("Last Name");

        LastNameTxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                LastNameTxtFocusLost(evt);
            }
        });

        jLabel4.setText("Password");

        PasswordTxt.setText("jPasswordField1");
        PasswordTxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                PasswordTxtFocusLost(evt);
            }
        });

        jLabel5.setText("Email");

        EmailTxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                EmailTxtFocusLost(evt);
            }
        });

        jLabel6.setText("Phone Number");

        jLabel7.setText("User Type");

        UserTypeList.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Admin", "User" }));

        saveBtn.setText("Save");
        saveBtn.setEnabled(false);
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });

        UserTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "UserId", "FirstName", "LastName", "Email", "Password", "PhoneNumber", "UserType"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        UserTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                UserTblMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                UserTblMousePressed(evt);
            }
        });
        UserTable.setViewportView(UserTbl);
        if (UserTbl.getColumnModel().getColumnCount() > 0) {
            UserTbl.getColumnModel().getColumn(0).setResizable(false);
            UserTbl.getColumnModel().getColumn(1).setResizable(false);
            UserTbl.getColumnModel().getColumn(2).setResizable(false);
            UserTbl.getColumnModel().getColumn(3).setResizable(false);
            UserTbl.getColumnModel().getColumn(4).setResizable(false);
            UserTbl.getColumnModel().getColumn(5).setResizable(false);
            UserTbl.getColumnModel().getColumn(6).setResizable(false);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(42, 42, 42)
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(LastNameTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 236, Short.MAX_VALUE)
                                    .addComponent(FirstNameTxt)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel4)
                                                .addGap(31, 31, 31))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(30, 30, 30)))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(PasswordTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(EmailTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(PhoneTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                            .addComponent(saveBtn)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(UserId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                            .addComponent(jLabel7)
                                            .addGap(18, 18, 18)
                                            .addComponent(UserTypeList, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(UserTable, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 619, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(UserTable, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(FirstNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(LastNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(PasswordTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(EmailTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(PhoneTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(UserTypeList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveBtn)
                    .addComponent(UserId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        UserId.setVisible(false);
        LoadUserInf();

    }//GEN-LAST:event_formWindowOpened

    private void UserTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UserTblMouseClicked
        // TODO add your handling code here:
        selectedRows();
    }//GEN-LAST:event_UserTblMouseClicked

    private void UserTblMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UserTblMousePressed
        // TODO add your handling code here:
        selectedRows();
    }//GEN-LAST:event_UserTblMousePressed

    private void FirstNameTxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_FirstNameTxtFocusLost
        // TODO add your handling code here:
        EnableSaveKey();
    }//GEN-LAST:event_FirstNameTxtFocusLost

    private void LastNameTxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_LastNameTxtFocusLost
        // TODO add your handling code here:
        EnableSaveKey();
    }//GEN-LAST:event_LastNameTxtFocusLost

    private void PasswordTxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_PasswordTxtFocusLost
        // TODO add your handling code here:
        EnableSaveKey();
    }//GEN-LAST:event_PasswordTxtFocusLost

    private void EmailTxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_EmailTxtFocusLost
        // TODO add your handling code here:
        EnableSaveKey();
    }//GEN-LAST:event_EmailTxtFocusLost

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
        // TODO add your handling code here:
     try{
            CrudClass crudClass = new CrudClass();

            String sqlStr = "";
            String pass = new String(PasswordTxt.getPassword());
            pass = pass.replace("'", "");

           if(UserId.getText().equals("")){
                sqlStr = "insert into tusers(FirstName, LastName, Email, Password, PhoneNumber, UserType) Values (";
                
                sqlStr += "'" + FirstNameTxt.getText() + "'";
                sqlStr += ", '" + LastNameTxt.getText() + "'";
                sqlStr += ", '" + EmailTxt.getText() + "'";
                sqlStr += ", '" + pass + "'";
                sqlStr += ", '" + PhoneTxt.getText() + "'";
                sqlStr += ", " + UserTypeList.getSelectedIndex() ;
                
                sqlStr += ")";

            }else{
                sqlStr = " update tusers set FirstName = '" + FirstNameTxt.getText() + "'";
                sqlStr += ", LastName = '" + LastNameTxt.getText() + "'";
                sqlStr += ", Email = '" + EmailTxt.getText() + "' ";
                sqlStr += ", Password = '" + pass + "' "; 
                sqlStr += ", PhoneNumber = '" + PhoneTxt.getText() + "' ";
                sqlStr += ", UserType = " + UserTypeList.getSelectedIndex() ;
                
                sqlStr += " where UserId = " + UserId.getText().trim(); 
            }
            if(crudClass.RunSql(sqlStr) > 0 ) {
                JOptionPane.showMessageDialog(null, "Update Inf Successfully");
                ResetForm();
            }else{
                JOptionPane.showMessageDialog(null, "Goes something Wrong");
            }     
            
        } catch (SQLException ex) {
            Logger.getLogger(CategoryForm.class.getName()).log(Level.SEVERE, null, ex);
        }catch (ClassNotFoundException ex) {
                Logger.getLogger(CategoryForm.class.getName()).log(Level.SEVERE, null, ex);
            }        
        
    }//GEN-LAST:event_saveBtnActionPerformed

        /*******************************************************************************
     *  ResetForm
     */
    private void ResetForm(){
        FirstNameTxt.setText("");
        LastNameTxt.setText("");
        EmailTxt.setText("");
        PasswordTxt.setText("");
        PhoneTxt.setText("");
        UserTypeList.setSelectedIndex(0);
        
        LoadUserInf();
    }

   /****************************************************
 * LoadCategoryInf
 */    
    private void LoadUserInf(){
        DefaultTableModel userModel = new DefaultTableModel();
        try {
    
            CrudClass crudClass = new CrudClass();
            ArrayList<String> comboList = new ArrayList<String>();
            String sqlStr = "";
            sqlStr = "select UserId, FirstName, LastName, Email, Password, PhoneNumber, UserType from tusers ";

            ResultSet rs = crudClass.ReadData(sqlStr);
            /*while(rs.next()){
                Categorycombo.addItem(rs.getString(2));
            }*/

            userModel = crudClass.resultSetToTableModel(rs);
            userModel.setNumRows(100);
            userModel.setRowCount(100);
            
            
            UserTbl.setModel(userModel);
        } catch (SQLException ex) {
            Logger.getLogger(CategoryForm.class.getName()).log(Level.SEVERE, null, ex);
        }catch (ClassNotFoundException ex) {
                Logger.getLogger(CategoryForm.class.getName()).log(Level.SEVERE, null, ex);
        }   
        
        //return catTable;
    }
    
        /**************************************************************
     * EnableSaveKey
     */
    private void EnableSaveKey(){
        
        if(!FirstNameTxt.getText().trim().equals("") && !LastNameTxt.getText().trim().equals("") && !EmailTxt.getText().trim().equals("") && PasswordTxt.getPassword().length != 0) {
            saveBtn.setEnabled(true);
        }else{
            saveBtn.setEnabled(false);
        }
    }


    private void selectedRows(){
        int ind = UserTbl.getSelectedRow();
        TableModel model = UserTbl.getModel();
        
        
        FirstNameTxt.setText(model.getValueAt(ind, 1).toString());
        LastNameTxt.setText(model.getValueAt(ind, 2).toString());
        EmailTxt.setText(model.getValueAt(ind, 3).toString());
        PasswordTxt.setText(model.getValueAt(ind, 4).toString());
        PhoneTxt.setText(model.getValueAt(ind, 5).toString());
        
        UserTypeList.setSelectedIndex(Integer.parseInt(model.getValueAt(ind, 6).toString()));
        UserId.setText(model.getValueAt(ind, 0).toString());

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DefineUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DefineUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DefineUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DefineUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DefineUser().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField EmailTxt;
    private javax.swing.JTextField FirstNameTxt;
    private javax.swing.JTextField LastNameTxt;
    private javax.swing.JPasswordField PasswordTxt;
    private javax.swing.JTextField PhoneTxt;
    private javax.swing.JTextField UserId;
    private javax.swing.JScrollPane UserTable;
    private javax.swing.JTable UserTbl;
    private javax.swing.JComboBox<String> UserTypeList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JButton saveBtn;
    // End of variables declaration//GEN-END:variables
}
